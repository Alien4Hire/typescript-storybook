// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RuleContainer /> renders without crashing 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c7 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 1em;
  height: 1em;
  display: inline-block;
  fill: currentColor;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  font-size: 1.5rem;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0;
  border: 0;
  margin: 0;
  border-radius: 0;
  padding: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c2::-moz-focus-inner {
  border-style: none;
}

.c2.Mui-disabled {
  pointer-events: none;
  cursor: default;
}

.c10 {
  margin: 0;
  color: #080808;
  font-size: 18px;
  font-family: Source Sans Pro;
  font-weight: 600;
  line-height: 1.167;
}

.c12 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 400;
  font-style: normal;
}

.c13 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 600;
  line-height: 1.235;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 8px;
  border: 2px solid #dddddd;
  padding: 12px 20px;
  min-height: 84px;
  margin-bottom: 25px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c14 {
  font-size: 14px;
  text-transform: uppercase;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Source Sans Pro,sans-serif;
  font-weight: normal;
  line-height: 1.75;
  min-width: 64px;
  padding: 6px 8px;
  border-radius: 4px;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  color: #00758e;
}

.c14:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,117,142,0.04);
}

.c14.Mui-disabled {
  color: rgba(0,0,0,0.26);
}

.c3 {
  padding: 9px;
  border-radius: 50%;
}

.c5 {
  cursor: inherit;
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  z-index: 1;
}

.c6 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c9 {
  left: 0;
  position: absolute;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transition: -webkit-transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
  -webkit-transition: transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
  transition: transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
}

.c4 {
  color: rgba(0,0,0,0.6);
}

.c4:hover {
  background-color: rgba(0,117,142,0.04);
}

.c4.Mui-checked {
  color: #00758e;
}

.c4.Mui-disabled {
  color: rgba(0,0,0,0.26);
}

@media print {
  .c2 {
    color-adjust: exact;
  }
}

@media (hover:none) {
  .c14:hover {
    background-color: transparent;
  }
}

@media (hover:none) {
  .c4:hover {
    background-color: transparent;
  }
}

<body>
    <div>
      <div
        class="c0 MuiBox-root"
      >
        <div
          class="c1 MuiBox-root"
        >
          <span
            class="c2 MuiRadio-root MuiRadio-colorPrimary MuiButtonBase-root c3 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-root c4"
          >
            <input
              aria-label="A"
              class="c5 PrivateSwitchBase-input"
              name="radio-button-example"
              type="radio"
              value="a"
            />
            <span
              class="c6"
            >
              <svg
                aria-hidden="true"
                class="c7 MuiSvgIcon-root MuiSvgIcon-fontSizeMedium c8"
                data-testid="RadioButtonUncheckedIcon"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                />
              </svg>
              <svg
                aria-hidden="true"
                class="c7 MuiSvgIcon-root MuiSvgIcon-fontSizeMedium c9"
                data-testid="RadioButtonCheckedIcon"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                />
              </svg>
            </span>
          </span>
          <h3
            class="c10 MuiTypography-root MuiTypography-h3"
          >
            Setting One
          </h3>
        </div>
        <div
          class="c11 MuiBox-root"
        >
          <span
            class="c12 MuiTypography-root MuiTypography-textBasic"
            style="color: rgb(104, 104, 104); line-height: 24px;"
          >
            Recommended Use:
          </span>
          <h4
            class="c13 MuiTypography-root MuiTypography-h4"
          >
            none
          </h4>
        </div>
        <div
          class="c11 MuiBox-root"
        >
          <span
            class="c12 MuiTypography-root MuiTypography-textBasic"
            style="color: rgb(104, 104, 104); line-height: 24px;"
          >
            Visibility:
          </span>
          <h4
            class="c13 MuiTypography-root MuiTypography-h4"
          >
            Available
          </h4>
        </div>
        <button
          class="c2 MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root c14"
          tabindex="0"
          type="button"
        >
          <svg>
            trash_hollow.svg
          </svg>
        </button>
      </div>
    </div>
  </body>,
  "container": .c7 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 1em;
  height: 1em;
  display: inline-block;
  fill: currentColor;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  font-size: 1.5rem;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  background-color: transparent;
  outline: 0;
  border: 0;
  margin: 0;
  border-radius: 0;
  padding: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c2::-moz-focus-inner {
  border-style: none;
}

.c2.Mui-disabled {
  pointer-events: none;
  cursor: default;
}

.c10 {
  margin: 0;
  color: #080808;
  font-size: 18px;
  font-family: Source Sans Pro;
  font-weight: 600;
  line-height: 1.167;
}

.c12 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 400;
  font-style: normal;
}

.c13 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 600;
  line-height: 1.235;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 8px;
  border: 2px solid #dddddd;
  padding: 12px 20px;
  min-height: 84px;
  margin-bottom: 25px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c14 {
  font-size: 14px;
  text-transform: uppercase;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Source Sans Pro,sans-serif;
  font-weight: normal;
  line-height: 1.75;
  min-width: 64px;
  padding: 6px 8px;
  border-radius: 4px;
  -webkit-transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,box-shadow 250ms cubic-bezier(0.4,0,0.2,1) 0ms,border-color 250ms cubic-bezier(0.4,0,0.2,1) 0ms,color 250ms cubic-bezier(0.4,0,0.2,1) 0ms;
  color: #00758e;
}

.c14:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,117,142,0.04);
}

.c14.Mui-disabled {
  color: rgba(0,0,0,0.26);
}

.c3 {
  padding: 9px;
  border-radius: 50%;
}

.c5 {
  cursor: inherit;
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  z-index: 1;
}

.c6 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c9 {
  left: 0;
  position: absolute;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transition: -webkit-transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
  -webkit-transition: transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
  transition: transform 150ms cubic-bezier(0.4,0,1,1) 0ms;
}

.c4 {
  color: rgba(0,0,0,0.6);
}

.c4:hover {
  background-color: rgba(0,117,142,0.04);
}

.c4.Mui-checked {
  color: #00758e;
}

.c4.Mui-disabled {
  color: rgba(0,0,0,0.26);
}

@media print {
  .c2 {
    color-adjust: exact;
  }
}

@media (hover:none) {
  .c14:hover {
    background-color: transparent;
  }
}

@media (hover:none) {
  .c4:hover {
    background-color: transparent;
  }
}

<div>
    <div
      class="c0 MuiBox-root"
    >
      <div
        class="c1 MuiBox-root"
      >
        <span
          class="c2 MuiRadio-root MuiRadio-colorPrimary MuiButtonBase-root c3 MuiRadio-root MuiRadio-colorPrimary PrivateSwitchBase-root c4"
        >
          <input
            aria-label="A"
            class="c5 PrivateSwitchBase-input"
            name="radio-button-example"
            type="radio"
            value="a"
          />
          <span
            class="c6"
          >
            <svg
              aria-hidden="true"
              class="c7 MuiSvgIcon-root MuiSvgIcon-fontSizeMedium c8"
              data-testid="RadioButtonUncheckedIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
              />
            </svg>
            <svg
              aria-hidden="true"
              class="c7 MuiSvgIcon-root MuiSvgIcon-fontSizeMedium c9"
              data-testid="RadioButtonCheckedIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
              />
            </svg>
          </span>
        </span>
        <h3
          class="c10 MuiTypography-root MuiTypography-h3"
        >
          Setting One
        </h3>
      </div>
      <div
        class="c11 MuiBox-root"
      >
        <span
          class="c12 MuiTypography-root MuiTypography-textBasic"
          style="color: rgb(104, 104, 104); line-height: 24px;"
        >
          Recommended Use:
        </span>
        <h4
          class="c13 MuiTypography-root MuiTypography-h4"
        >
          none
        </h4>
      </div>
      <div
        class="c11 MuiBox-root"
      >
        <span
          class="c12 MuiTypography-root MuiTypography-textBasic"
          style="color: rgb(104, 104, 104); line-height: 24px;"
        >
          Visibility:
        </span>
        <h4
          class="c13 MuiTypography-root MuiTypography-h4"
        >
          Available
        </h4>
      </div>
      <button
        class="c2 MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root c14"
        tabindex="0"
        type="button"
      >
        <svg>
          trash_hollow.svg
        </svg>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
