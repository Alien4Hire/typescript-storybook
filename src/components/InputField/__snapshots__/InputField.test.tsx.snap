// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<InputField /> renders without crashing 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 400;
  font-style: normal;
  color: #383838;
  line-height: 20px;
}

.c1 {
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Source Sans Pro,sans-serif;
  font-weight: normal;
  font-size: 1rem;
  line-height: 1.4375em;
  color: rgba(0,0,0,0.87);
  box-sizing: border-box;
  position: relative;
  cursor: text;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1.Mui-disabled {
  color: rgba(0,0,0,0.38);
  cursor: default;
}

.c5 {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  color: currentColor;
  padding: 4px 0 5px;
  border: 0;
  box-sizing: content-box;
  background: none;
  height: 1.4375em;
  margin: 0;
  -webkit-tap-highlight-color: transparent;
  display: block;
  min-width: 0;
  width: 100%;
  -webkit-animation-name: mui-auto-fill-cancel;
  animation-name: mui-auto-fill-cancel;
  -webkit-animation-duration: 10ms;
  animation-duration: 10ms;
}

.c5::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5::-moz-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5:-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5::-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5:focus {
  outline: 0;
}

.c5:invalid {
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-webkit-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-moz-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:-ms-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-ms-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-webkit-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-moz-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus:-ms-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-ms-input-placeholder {
  opacity: 0.42;
}

.c5.Mui-disabled {
  opacity: 1;
  -webkit-text-fill-color: rgba(0,0,0,0.38);
}

.c5:-webkit-autofill {
  -webkit-animation-duration: 5000s;
  animation-duration: 5000s;
  -webkit-animation-name: mui-auto-fill;
  animation-name: mui-auto-fill;
}

.c2 {
  position: relative;
}

.c3 {
  border: 1px solid #686868;
  padding: 7px 10px 7px 7px;
  width: 100%;
}

.c3 input {
  padding: 0;
}

.c3 input::-webkit-input-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input::-moz-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input:-ms-input-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input::placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

<body>
    <div>
      <label>
        <span
          class="c0 MuiTypography-root MuiTypography-textBasic"
        >
          label
        </span>
        <div
          class="c1 c2 MuiInput-root MuiInputBase-root MuiInputBase-colorPrimary c3"
        >
          <input
            class="c4 MuiInput-input-ulsMd c5 MuiInput-input MuiInputBase-input"
            placeholder="placeholder"
            type="text"
            value="test"
          />
        </div>
      </label>
    </div>
  </body>,
  "container": .c0 {
  margin: 0;
  color: #080808;
  font-size: 16px;
  font-family: Source Sans Pro;
  font-weight: 400;
  font-style: normal;
  color: #383838;
  line-height: 20px;
}

.c1 {
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Source Sans Pro,sans-serif;
  font-weight: normal;
  font-size: 1rem;
  line-height: 1.4375em;
  color: rgba(0,0,0,0.87);
  box-sizing: border-box;
  position: relative;
  cursor: text;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1.Mui-disabled {
  color: rgba(0,0,0,0.38);
  cursor: default;
}

.c5 {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  color: currentColor;
  padding: 4px 0 5px;
  border: 0;
  box-sizing: content-box;
  background: none;
  height: 1.4375em;
  margin: 0;
  -webkit-tap-highlight-color: transparent;
  display: block;
  min-width: 0;
  width: 100%;
  -webkit-animation-name: mui-auto-fill-cancel;
  animation-name: mui-auto-fill-cancel;
  -webkit-animation-duration: 10ms;
  animation-duration: 10ms;
}

.c5::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5::-moz-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5:-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5::-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  -webkit-transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: opacity 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c5:focus {
  outline: 0;
}

.c5:invalid {
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-webkit-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-moz-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:-ms-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4::-ms-input-placeholder {
  opacity: 0 !important;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-webkit-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-moz-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus:-ms-input-placeholder {
  opacity: 0.42;
}

label[data-shrink=false] + .MuiInputBase-formControl .c4:focus::-ms-input-placeholder {
  opacity: 0.42;
}

.c5.Mui-disabled {
  opacity: 1;
  -webkit-text-fill-color: rgba(0,0,0,0.38);
}

.c5:-webkit-autofill {
  -webkit-animation-duration: 5000s;
  animation-duration: 5000s;
  -webkit-animation-name: mui-auto-fill;
  animation-name: mui-auto-fill;
}

.c2 {
  position: relative;
}

.c3 {
  border: 1px solid #686868;
  padding: 7px 10px 7px 7px;
  width: 100%;
}

.c3 input {
  padding: 0;
}

.c3 input::-webkit-input-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input::-moz-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input:-ms-input-placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

.c3 input::placeholder {
  line-height: 20px;
  color: #686868;
  opacity: 1;
  font-style: italic;
}

<div>
    <label>
      <span
        class="c0 MuiTypography-root MuiTypography-textBasic"
      >
        label
      </span>
      <div
        class="c1 c2 MuiInput-root MuiInputBase-root MuiInputBase-colorPrimary c3"
      >
        <input
          class="c4 MuiInput-input-ulsMd c5 MuiInput-input MuiInputBase-input"
          placeholder="placeholder"
          type="text"
          value="test"
        />
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
